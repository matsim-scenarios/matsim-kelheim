<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<parent>
		<groupId>org.matsim</groupId>
		<artifactId>matsim-all</artifactId>

		<!-- PR-labelled release -->
		<version>16.0-PR2750</version>

		<!-- snapshot == not recommended: rather use PR-labelled release!-->
		<!--		<version>16.0-SNAPSHOT</matsim.version>-->
	</parent>

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.github.matsim-scenarios</groupId>
	<artifactId>matsim-kelheim</artifactId>
	<version>3.x-SNAPSHOT</version>

	<name>MATSim Kelheim Model</name>
	<description>A transport model of the district of Kelheim and it's surroundings</description>

	<properties>
		<matsim.version>${project.parent.version}</matsim.version>

		<main.class>org.matsim.run.RunKelheimScenario</main.class>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.compiler.release>17</maven.compiler.release>
	</properties>

	<distributionManagement>
		<repository>
			<id>github</id>
			<name>GitHub Packages</name>
			<url>https://maven.pkg.github.com/matsim-scenarios/matsim-kelheim</url>
		</repository>
	</distributionManagement>

	<dependencies>
		<dependency>
			<!-- This is the matsim "core": -->
			<groupId>org.matsim</groupId>
			<artifactId>matsim</artifactId>
			<version>${matsim.version}</version>
		</dependency>

		<dependency>
			<groupId>org.matsim.contrib</groupId>
			<artifactId>drt</artifactId>
			<version>${matsim.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.matsim.contrib</groupId>
			<artifactId>drt-extensions</artifactId>
			<version>${matsim.version}</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>com.github.matsim-vsp</groupId>
			<artifactId>pt-extensions</artifactId>
			<version>ceef00ef6e</version>
			<exclusions>
				<!-- Will pull old drt version -->
				<exclusion>
					<groupId>org.matsim.contrib</groupId>
					<artifactId>drt</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.matsim</groupId>
					<artifactId>matsim</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.matsim</groupId>
					<artifactId>matsim-examples</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.matsim.contrib</groupId>
					<artifactId>vsp</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.openjfx</groupId>
					<artifactId>javafx-graphics</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<!-- Include the JUnit testing library.  Not transitive. -->
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.2</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<!--MATSim test infrastructure.  Not transitive.-->
			<groupId>org.matsim</groupId>
			<artifactId>matsim</artifactId>
			<type>test-jar</type>
			<version>${matsim.version}</version>
			<scope>test</scope>
		</dependency>

		<!--some contribs:-->
		<dependency>
			<groupId>org.matsim.contrib</groupId>
			<artifactId>application</artifactId>
			<version>${matsim.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.github.matsim-org</groupId>
					<artifactId>gtfs2matsim</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.matsim.contrib</groupId>
			<artifactId>freight</artifactId>
			<version>${matsim.version}</version>
		</dependency>

		<dependency>
			<groupId>com.github.matsim-org</groupId>
			<artifactId>gtfs2matsim</artifactId>
			<version>master-33809c4f0f-1</version>
			<exclusions>
				<exclusion>
					<groupId>org.matsim</groupId>
					<artifactId>matsim</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.postgresql</groupId>
					<artifactId>postgresql</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.matsim.contrib</groupId>
			<artifactId>vsp</artifactId>
			<version>${matsim.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.postgresql</groupId>
					<artifactId>postgresql</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.matsim.contrib</groupId>
			<artifactId>emissions</artifactId>
			<version>${matsim.version}</version>
			<scope>compile</scope>
			<exclusions>
				<!-- Conflict with the OSM reader -->
				<exclusion>
					<groupId>com.google.protobuf</groupId>
					<artifactId>protobuf-java</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.matsim.contrib</groupId>
			<artifactId>simwrapper</artifactId>
			<version>${matsim.version}</version>
		</dependency>

		<dependency>
			<groupId>org.matsim.contrib</groupId>
			<artifactId>informed-mode-choice</artifactId>
			<version>${matsim.version}</version>
		</dependency>

		<dependency>
			<groupId>one.util</groupId>
			<artifactId>streamex</artifactId>
			<version>0.8.1</version>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.11.0</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M9</version>
				<configuration>
					<forkCount>1</forkCount>
					<reuseForks>false</reuseForks>
					<!-- avoid out of memory errors: -->
					<argLine>@{argLine} -Xmx11500m -Djava.awt.headless=true -Dmatsim.preferLocalDtds=true</argLine>
					<!--necessary in tu berlin gitlab. BUT not good in other places, so solve by command line switch only where needed.  kai, nov'18-->
					<!--<useSystemClassLoader>false</useSystemClassLoader>-->
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.8</version>
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Fetch Git information	-->
			<plugin>
				<groupId>io.github.git-commit-id</groupId>
				<artifactId>git-commit-id-maven-plugin</artifactId>
				<version>5.0.0</version>
				<executions>
					<execution>
						<id>get-the-git-infos</id>
						<goals>
							<goal>revision</goal>
						</goals>
						<phase>validate</phase>
					</execution>
				</executions>
				<configuration>
					<failOnNoGitDirectory>false</failOnNoGitDirectory>
				</configuration>
			</plugin>

			<plugin>
				<!--				The maven-shade-plugin replaces the maven-assembly-plugin to configure "mvn package". The assembly-plugin regularly-->
				<!--				creates problems when GeoTools are used, which the shade-plugin does not (see-->
				<!--				https://stackoverflow.com/questions/27429097/geotools-cannot-find-hsql-epsg-db-throws-error-nosuchauthoritycodeexception/27431381#27431381)-->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.4.1</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<outputFile>${project.basedir}/${project.build.finalName}-${git.commit.id.describe-short}.jar</outputFile>
							<transformers>
								<!-- The following sets the main class for the executable jar as you otherwise would with the assembly plugin -->
								<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<manifestEntries>
										<Main-Class>${main.class}</Main-Class>
										<Specification-Vendor>org.matsim</Specification-Vendor>
										<Implementation-Vendor>org.matsim</Implementation-Vendor>
										<Implementation-Version>${project.version}</Implementation-Version>
										<SCM-Revision>${git.commit.id.describe-short}</SCM-Revision>
										<Multi-Release>true</Multi-Release>
									</manifestEntries>
								</transformer>
								<!-- The following merges the various GeoTools META-INF/services files         -->
								<transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
							</transformers>
							<filters>
								<filter>
									<artifact>*:*</artifact>
									<excludes>
										<exclude>META-INF/*.RSA</exclude>
										<exclude>META-INF/*.SF</exclude>
										<exclude>META-INF/*.RSA</exclude>
									</excludes>
								</filter>
							</filters>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>3.2.0</version>
				<dependencies>
					<dependency>
						<groupId>com.puppycrawl.tools</groupId>
						<artifactId>checkstyle</artifactId>
						<version>10.6.0</version>
					</dependency>
				</dependencies>
				<configuration>
					<configLocation>checkstyle.xml</configLocation>
					<consoleOutput>true</consoleOutput>
					<failsOnError>true</failsOnError>
					<failOnViolation>true</failOnViolation>
					<linkXRef>false</linkXRef>
				</configuration>
				<executions>
					<execution>
						<id>checkstyle</id>
						<phase>package</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<reportSets>
					<reportSet>
						<reports>
							<!-- select non-aggregate reports -->
							<report>report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>

	<repositories>
		<!--Note that in general repositories are not transitive, so they need to be repeated at every level where needed.-->
		<repository>
			<!-- Geotools is not on Maven central -->
			<id>osgeo</id>
			<name>Geotools repository</name>
			<url>https://repo.osgeo.org/repository/release/</url>
		</repository>
		<repository>
			<!-- Repository for MATSim (MATSim is not on Maven central, releases and snapshots) -->
			<id>matsim</id>
			<url>https://repo.matsim.org/repository/matsim</url>
		</repository>
		<!-- for dependencies of osm-network-reader -->
		<repository>
			<id>topobyte</id>
			<url>https://mvn.topobyte.de</url>
		</repository>
		<!-- for dependencies of osm-network-reader -->
		<repository>
			<id>slimjars</id>
			<url>https://mvn.slimjars.com</url>
		</repository>

		<repository>
			<id>jitpack.io</id>
			<url>https://jitpack.io</url>
		</repository>
	</repositories>

</project>
